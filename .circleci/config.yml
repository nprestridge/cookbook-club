version: 2.1
jobs:
  build:
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: cimg/node:22.0.0
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Prepare for artifact and test results collection - https://circleci.com/docs/2.0/artifacts/
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dep-{{ .Branch }}-
            - v1-dep-master-
            - v1-dep-
      - run: /bin/bash .circleci/set-configs.sh
      - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
      - run: npm install
        # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - ./node_modules
      - run: npm run build
      - run: npm run test
      - persist_to_workspace:
          root: ./
          paths:
            - build
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
  deploy:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install awscli
          command: python -m pip install --user awscli
      - run:
          name: Deploy to S3
          command: aws s3 sync build s3://cookbook-club-site/ --delete --cache-control max-age=31536000,public
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - /feature-.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: deploy
